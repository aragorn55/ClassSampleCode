//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TempConverterPro.Droid.TempConverter {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TempConvertSoap", Namespace="http://www.w3schools.com/webservices/")]
    public partial class TempConvert : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public TempConvert() {
            this.Url = "http://www.w3schools.com/WebServices/TempConvert.asmx";
        }
        
        public TempConvert(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.w3schools.com/webservices/FahrenheitToCelsius", RequestNamespace="http://www.w3schools.com/webservices/", ResponseNamespace="http://www.w3schools.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FahrenheitToCelsius(string Fahrenheit) {
            object[] results = this.Invoke("FahrenheitToCelsius", new object[] {
                        Fahrenheit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFahrenheitToCelsius(string Fahrenheit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FahrenheitToCelsius", new object[] {
                        Fahrenheit}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFahrenheitToCelsius(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.w3schools.com/webservices/CelsiusToFahrenheit", RequestNamespace="http://www.w3schools.com/webservices/", ResponseNamespace="http://www.w3schools.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CelsiusToFahrenheit(string Celsius) {
            object[] results = this.Invoke("CelsiusToFahrenheit", new object[] {
                        Celsius});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCelsiusToFahrenheit(string Celsius, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CelsiusToFahrenheit", new object[] {
                        Celsius}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCelsiusToFahrenheit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
